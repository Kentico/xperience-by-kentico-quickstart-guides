@using System.Globalization
@using TrainingGuides.Web.Features.Products
@using TrainingGuides.Web.Features.Products.Widgets.Product
@using TrainingGuides.Web.Features.Shared.OptionProviders.Heading
@using TrainingGuides.Web.Features.Shared.Services
@using TrainingGuides.Web.Features.Products.Models

@inject IHttpRequestService httpRequestService

@model ProductWidgetViewModel

@{
    var baseUrl = httpRequestService.GetBaseUrl();
}

@if (Model is null || Model.IsMisconfigured)
{
    <tg-page-builder-content>
        <tg-configure-widget-instructions />
    </tg-page-builder-content>

    return;
}

@* <a href="@Model.Product.Url" class="c-card-anchor" target="@(Model.OpenInNewTab ? "_blank": "")" title="@Model.Product.Link?.LinkTitleText"> *@
    <tg-component-style color-scheme="@Model.ColorScheme" corner-style="@Model.CornerStyle" class="c-section default">
        @* image *@
        @if (Model.ProductImage != null && !string.IsNullOrEmpty(Model.ProductImage.FilePath))
        {
            <div class="c-card_img c-hero_canvas_img">
                <img src="@Url.Content(Model.ProductImage.FilePath)" alt="@Model.ProductImage.AltText" />
            </div>
        }
        <div class="p2">
            @* title *@
            <h3 class="mb-0">@Html.Raw(Model.Product.Name)</h3>
            @* short description *@
            <p class="mt-5 mb-0">@Html.Raw(Model.Product.ShortDescription)</p>
            @* features *@
            <div class="c-table">
                @foreach (var feature in Model.Product.Features)
                {
                    <div class="c-table_row">
                        <div class="c-table_cell"><div class="c-table_cell">@Html.Raw(@feature.Label)</div></div>
                        <div class="c-table_cell text-end">
                            <svg class="c-icon">
                                <use xlink:href="@baseUrl/assets/img/icons.svg#check"></use>
                            </svg>                    
                        </div>
                    </div>
                }
            </div>
            @* cta *@
            @if (!string.IsNullOrEmpty(Model.CallToAction))
            {
                <div class="mt-4">
                    <a type="submit" class="btn text-uppercase @Model.CallToActionStyleClasses" target="@(Model.OpenInNewTab ? "_blank" : "")" href="@Model.Product.Url" title="@Model.Product.Header">@Model.CallToAction</a>
                </div>
            }
        </div>
    </tg-component-style>
@* </a> *@