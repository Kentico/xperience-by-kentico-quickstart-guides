//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.KBank;

[assembly: RegisterDocumentType(HeadingAndSub.CLASS_NAME, typeof(HeadingAndSub))]

namespace CMS.DocumentEngine.Types.KBank
{
	/// <summary>
	/// Represents a content item of type HeadingAndSub.
	/// </summary>
	public partial class HeadingAndSub : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "KBank.HeadingAndSub";


		/// <summary>
		/// The instance of the class that provides extended API for working with HeadingAndSub fields.
		/// </summary>
		private readonly HeadingAndSubFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// HeadingAndSubID.
		/// </summary>
		[DatabaseIDField]
		public int HeadingAndSubID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("HeadingAndSubID"), 0);
			}
			set
			{
				SetValue("HeadingAndSubID", value);
			}
		}


		/// <summary>
		/// Heading.
		/// </summary>
		[DatabaseField]
		public string Heading
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Heading"), @"");
			}
			set
			{
				SetValue("Heading", value);
			}
		}


		/// <summary>
		/// Subheading.
		/// </summary>
		[DatabaseField]
		public string Subheading
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Subheading"), @"");
			}
			set
			{
				SetValue("Subheading", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with HeadingAndSub fields.
		/// </summary>
		[RegisterProperty]
		public HeadingAndSubFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with HeadingAndSub fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class HeadingAndSubFields : AbstractHierarchicalObject<HeadingAndSubFields>
		{
			/// <summary>
			/// The content item of type HeadingAndSub that is a target of the extended API.
			/// </summary>
			private readonly HeadingAndSub mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="HeadingAndSubFields" /> class with the specified content item of type HeadingAndSub.
			/// </summary>
			/// <param name="instance">The content item of type HeadingAndSub that is a target of the extended API.</param>
			public HeadingAndSubFields(HeadingAndSub instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// HeadingAndSubID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.HeadingAndSubID;
				}
				set
				{
					mInstance.HeadingAndSubID = value;
				}
			}


			/// <summary>
			/// Heading.
			/// </summary>
			public string Heading
			{
				get
				{
					return mInstance.Heading;
				}
				set
				{
					mInstance.Heading = value;
				}
			}


			/// <summary>
			/// Subheading.
			/// </summary>
			public string Subheading
			{
				get
				{
					return mInstance.Subheading;
				}
				set
				{
					mInstance.Subheading = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="HeadingAndSub" /> class.
		/// </summary>
		public HeadingAndSub() : base(CLASS_NAME)
		{
			mFields = new HeadingAndSubFields(this);
		}

		#endregion
	}
}