@using System.Globalization
@using TrainingGuides.Web.Features.Products
@using TrainingGuides.Web.Features.Products.Widgets.Product
@using TrainingGuides.Web.Features.Shared.OptionProviders.Heading
@using TrainingGuides.Web.Features.Shared.Services
@using TrainingGuides.Web.Features.Products.Models

@inject IHttpRequestService httpRequestService

@model ProductWidgetViewModel

@{
    var baseUrl = httpRequestService.GetBaseUrl();
}

@if (Model is null || Model.IsMisconfigured)
{
    <tg-page-builder-content>
        <tg-configure-widget-instructions />
    </tg-page-builder-content>

    return;
}

<div class="@Model.ParentElementCssClasses">
    <a href="@Model.Product!.Link?.PagePath"
        target="@(Model.Product!.Link?.OpenInNewTab ?? false ? "_blank": "")"
        title="@Model.Product!.Link?.LinkTitleText">

        @* image *@
        @if (Model.ProductImage != null && !string.IsNullOrEmpty(Model.ProductImage.FilePath))
        {
            <tg-styled-image
                corner-style="@Model.CornerStyle"
                class="@Model.ImageElementCssClasses"
                src="@Url.Content(Model.ProductImage.FilePath)"
                alt="@Model.ProductImage.AltText">
            </tg-styled-image>
        }
        <tg-component-style
            color-scheme="@Model.ColorScheme"
            corner-style="@Model.CornerStyle"
            class="@Model.MainContentElementCssClasses">

            @* title *@
            <h3 class="mt-2 mb-1">@Html.Raw(Model.Product.Name)</h3>
            
            @* short description *@
            <p>@Html.Raw(Model.Product.ShortDescription)</p>

            @* benefits *@
            @foreach (var benefit in Model.Product.Benefits)
            {
                <div class="tg-product_benefits c-icon-box mt-1 me-7">
                    <div class="c-icon-box_icon">
                        @if (benefit.Asset != null)
                        {
                            <img
                                src="@Url.Content(benefit.Asset.FilePath)"
                                alt="@benefit.Asset.AltText" class="c-icon" />
                        }
                    </div>
                    <div class="c-icon-box_body">
                        @benefit.Description
                    </div>
                </div>
            }
            @* features *@
            <div class="c-table mt-1">
                @foreach (var feature in Model.Product.Features)
                {
                    <div class="c-table_row">
                        <div class="c-table_cell">
                            <div class="c-table_cell">@feature.Label</div>
                        </div>
                        <div class="c-table_cell text-end">
                            <tg-product-feature-value feature="@feature"/>
                        </div>
                    </div>
                }
            </div>
            @* cta *@
            @if (!string.IsNullOrEmpty(Model.Product!.Link?.CallToAction))
            {
                <div class="mt-1">
                    <a type="submit"
                        href="@Model.Product.Link.PagePath"
                        class="btn text-uppercase @Model.CallToActionCssClasses"
                        target="@(Model.Product.Link.OpenInNewTab ? "_blank" : "")"
                        title="@Model.Product.Link.Name">@Model.Product.Link.CallToAction</a>
                </div>
            }
        </tg-component-style>
    </a>
</div>